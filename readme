Object of this program is to build a simple GUI interface to allow for the easy visibility and editing of program level
fault messages and IDs as well as operator messages.

Current Progress...
Connects to PLC and lists programs, double clicking on a selected program will create an instance of the edit window for that
program.

Windows are layed out using PYQT5 designer and compiled into python classes.
main.py is the entry point

pyinstaller command to compile to a single file runtime
pyinstaller main.py --noconsole --onefile --name TDS_MessageTool --distpath ./Release

!!!!Ensure to run inside the Virtual Environment or pyinstaller will be unable to find the supporting libs.!!!
Also app a path if libs are still not being found...shown below as example.

pyinstaller main.py --noconsole --onefile --name TDS_MessageTool --distpath ./Release -p C:\Users\bob.saget\PycharmProjects\TDS_PyLogixTagInterpreter


Readme File here is for my personal notes until a later date.
Ignore everything below this...



TLM - 10-23-2023
Check Github Issues for TODO list

TLM - 10-10-2023
Run the command below to compile the pyQT5 design file into executable python code that will generate a window on runtime.

pyuic5 PyQt5_DesignFile.ui -o MainWindow.py -x
'-x' option appends the snippet below
run without that option since the compiled windows are wrapper classes

Results should be the same code that is generated in the designer with the addition of an "if main" executable.
Example of "if main" generated

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
